@startuml
abstract class Creator << abstract >> {
    ...
    someOperation()
    {abstract} createProduct() : Product
}

note as N2
<b>Создатель</b> объявляет фабричный метод,
который должен возвращать новые объекты продуктов.

Важно, чтобы тип результата совпадал с общим интерфейсом продуктов.
Зачастую фабричный метод объявляют абстрактным,
чтобы заставить все подклассы реализовать его по-своему.
Но он может возвращать и некий стандартный продукт.

Несмотря на название, важно понимать, что создание продуктов
не является единственной функцией создателя.
Обычно он содержит и другой полезный код работы с продуктом.

Аналогия: большая софтверная компания может иметь центр подготовки
программистов, но основная задача компании — создавать программные
продукты, а не готовить программистов.
end note

Creator .up. N2

note left of Creator::createProduct
Product p = createProduct();
p.doStuff();
end note

hide empty fields
interface Product << interface >> #aliceblue;line:blue; {
    {abstract} doStuff()
}

Product <.left.. Creator

class ProductA {
    ...
    doStuff()
}

class ProductB {
    ...
    doStuff()
}

note as N3
<b>Конкретные продукты</b> содержат код различных продуктов.
Продукты будут отличаться реализацией, но интерфейс у них
будет общий.
end note

ProductA -[dotted]- N3
ProductB -[dotted]- N3

Product <|.. ProductA
Product <|.. ProductB

class CreatorA {
    ...
    createProduct() : Product
}
note left of CreatorA::createProduct
return new ProductA;
end note
class CreatorB {
    ...
    createProduct() : Product
}

note as N1
<b>Конкретные создатели</b> по-своему реализуют фабричный метод,
производя те или иные конкретные продукты.

Фабричный метод не обязан всё время создавать новые объекты.
Его можно переписать так, чтобы возвращать существующие объекты
из какого-то хранилища или кэша.
end note

CreatorA -[dotted]- N1
CreatorB -[dotted]- N1

Creator <|.. CreatorA
Creator <|.. CreatorB


note top of Product
<b>Продукт</b> определяет
общий интерфейс объектов,
которые может произвести
создатель и его подклассы.
end note

@enduml